drop program sp_out_unaliased_daily_rpt go
create program sp_out_unaliased_daily_rpt
  
/*****************
  Script will check the OEN_TXLOG table for all outbound messages for the prior
  day to check for CD:<num>. If found will keep a running total for the day. At
  the end of the report will send an email to select individuals for the CD: values
  found, what interfaces had the issue, and what code set's the values belonged to.
  Will be broken out by interface
 
  Question - how will report be created. Initial feelings report should be done for each
  outbound interface for the prior day. Will i need to break that down in PROD? Meaning
  will volume be too much on a busy interface to get all tx keys or ...?
 
  At this time query OEN_PROCINFO joining to OEN_PERSONALITY where OPI.service = OUTBOUND and
  OP.PACKESO > 0  this is not the best way, but should do for now
 *****************/

;;;; %i /cerner/d_m22/ccluserdir/sp_out_unaliased_daily_rpt.prg go
;;;; sp_out_unaliased_daily_report go
 
Free Record Out_Interfaces
Record Out_Interfaces
 (
   1 OI[*]
     2 Proc_Name = VC
     2 Proc_Desc = VC
     2 InterfaceID = F8
     2 SCP_ID      = F8
     2 PackESO     = F8
 )  ;; End
 
Free Record Msg_Key
Record Msg_Key
 (
   1 MK[*]
     2 TX_Key = VC
 )  ;; End
 
Free Record Query_Date
Record Query_Date
 (
   1 QD[*]
     2 Begin_Key = VC
     2 End_Key   = VC
 ) ;; End
 
Declare BASE_QUERY_DATE = VC With Public,
  Constant(Format((CURDATE - 1), "MM/DD/YYYY;;D"))
Declare BASE_QUERY_START_TIME = VC With Public,
  Constant("00:00:01")
Declare BASE_QUERY_END_TIME = VC With Public,
  Constant("23:59:59")
Declare Populate_Query_Date(procID) = I2
 
;;;; Email variables and funcs
Declare MyEnv = VC With Public,
  Constant(CnvtLower(Logical("ENVIRONMENT")))
Declare EmailDate = VC With Public,
  Constant(Format(CnvtDateTime(CURDATE, CURTIME3), "MM/DD/YYYY HH:MM:SS;;D"))
Declare DEFAULT_TO_EMAIL_ADDRESS = VC With Public,
  Constant("agagnon@spconinc.com");;;"Bryan.McKay@sjmc.org")
Declare FromEmailAddress = VC With Public,
  Constant(ConCat("daily_rpt_no_alias_", Trim(MyEnv), "@stjohn.org"))
Declare Send_Email_Msg(toEmail, msgToSend) = I2

;;;; Misc funcs to run program
Declare Get_Out_Interface(junk) = I2
;;;Declare Get_Msg_Keys(

Set stat = Get_Out_Interfaces(0)

For (oiCtr = 1 To Size(Out_Interfaces->OI, 5))
  Set stat = Populate_Query_Date(Out_Interfaces->OI[oiCtr]->InterfaceID)
  Call echo(build("Begin key:*",
           Query_Date->QD[1]->Begin_Key, char(0)))
  call echo(build("End Key:*",
           Query_Date->QD[1]->end_Key, char(0)))
  if (oiCtr > 5)
    set oictr = (size(out_interfaces->oi, 5) + 1)
  endif
EndFor


;;;; Subs below

Subroutine Send_Email_Msg(toEmail, msgToSend)
  Set stat = UAR_Send_Mail(
                          NullTerm(toEmail), 
                          NullTerm(ConCat(Trim(MyEnv), " - ESI Log daily rpt: ", 
                                      Trim(EmailDate))),
                          NullTerm(msgToSend), 
                          NullTerm(FromEmailAddress), 
                          5, 
                          NullTerm("IPM.NOTE"))
  return (1)
End ;; Ed

;;;; =========================

Subroutine Populate_Query_Date(procID)
  Set stat = AlterList(Query_Date->QD, 0)
  Set stat = AlterList(Query_Date->QD, 1)
  Declare Beg_Date = VC
  Declare End_Date = VC
  Declare Beg_Time = VC
  Declare End_Time = VC
  Declare SDString = VC
  Declare EDString = VC 
  Set Beg_Date  = BASE_QUERY_DATE
  Set End_Date  = BASE_QUERY_DATE
  Set Beg_Time  = BASE_QUERY_START_TIME
  Set End_Time  = BASE_QUERY_END_TIME
  
  SET SDSTRING  =  CNVTSTRING(CNVTDATE2(Beg_Date, "MM/DD/YYYY"), 5, 0, R)
  SET EDSTRING  =  CNVTSTRING(CNVTDATE2(End_Date, "MM/DD/YYYY"), 5, 0, R)
  SET TTIME  =  CONCAT(SUBSTRING(1, 2, BEG_TIME), SUBSTRING(4, 2, BEG_TIME))
  SET TITIME = (CNVTMIN(CNVTINT(TTIME)) * 60 +
                   CNVTINT(SUBSTRING(7, 2, BEG_TIME))) * 100
 
  SET STSTRING = CNVTSTRING(TITIME, 7, 0, R)
  SET TTIME    = CONCAT(SUBSTRING(1, 2, END_TIME), SUBSTRING(4, 2, END_TIME))
  SET TITIME   = (CNVTMIN(CNVTINT(TTIME)) * 60 +
                  CNVTINT(SUBSTRING(7, 2,  END_TIME ))) * 100
  SET ETSTRING = CNVTSTRING(TITIME, 7, 0, R)
 
  Set Query_Date->QD[1]->Begin_Key =
            CONCAT(" ", CNVTSTRING(procid, 4, 0, R), SDSTRING, STSTRING, "*")
  Set Query_Date->QD[1]->End_Key =
            CONCAT(" ", CNVTSTRING(procid, 4, 0, R), EDSTRING, ETSTRING, "*")
  return (Size(Query_Date->QD, 5))
End ;; End

;;;; =========================

Subroutine Get_Out_Interfaces(junk) 
  Declare tmpOICtr = I2
  Select Into "nl:"
    opi.proc_name,
    opi.proc_desc,
    opi.service,
    opi.interfaceid,
    opi.scp_eid,
    op.value
  From oen_procinfo opi,
       oen_personality op
  Plan opi
    Where opi.service = "Outbound"
   Join op
    Where op.interfaceid = opi.interfaceid AND
          op.name = "PACKESO" AND
          op.value != "0"
  Detail
    tmpOICtr = (Size(Out_Interfaces->OI, 5) + 1)
    stat     = AlterList(Out_Interfaces->OI, tmpOICtr)
    Out_Interfaces->OI[tmpOICtr]->InterfaceID = opi.interfaceid
    Out_Interfaces->OI[tmpOICtr]->SCP_ID      = opi.scp_eid
    Out_Interfaces->OI[tmpOICtr]->Proc_Name   = opi.proc_name
    Out_Interfaces->OI[tmpOICtr]->Proc_Desc   = opi.proc_desc
    Out_Interfaces->OI[tmpOICtr]->PackESO     = CnvtReal(op.value)
  With NoCounter,Time=90
  return (Size(Out_Interfaces->OI, 5))
End ;; End 

;;;; END  =================
 
end
go
 